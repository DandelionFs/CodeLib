
#include <stdio.h>
int main()
{
    int n;
    int a[59000]; ///确保保存最终运算结果的数组足够大
     int digit = 1; ///当前位数
     int temp;   ///阶乘的任一元素与a[]某位数的乘积结果
     int i, j, carry; ///carry：进位数
 
    
    while(scanf("%d",&n)) 
    {
        digit = 1;
         a[0] = 1;   ///将第一位数先初始化为1
 
    for ( i=2; i<=n; i++ )  ///阶乘开始，阶乘元素从2开始；
    {
         for( j=1, carry=0;  j<=digit; j++ )///当前元素依次与a[]中每一位上的数相乘
        {                   ///digit为当前相乘结果的位数；
            temp = a[j-1] * i + carry; ///当前元素依次与a[]中某位相乘的结果（加上进位）
             ///j-1 为当前第几位
              a[j-1] = temp % 10; ///更新当前a[]位的值；
              carry = temp / 10; ///看是否有进位
         }
        while(carry)
        {    ///如果有进位
              a[digit] = carry % 10; ///新加一位，添加信息。
              digit++;   ///位数增1
            carry = carry / 10; ///看还能不能进位
         }
    }
    //printf("n ! = ");    //显示结果
    for(j = digit; j >=1;j--)///从最高位开始输出
    {
        printf("%d",a[j-1]);
    }
    printf("\n");
    }
   
    return 0;
}


#include<iostream>
using namespace std;
int main()
{
	while (1)
	{
		int N, j;
		cin >> N;
		int p[1000] = { 0 };//控制后面的进位问题
		p[0] = 1;	
		for (int i = 1; i <= N; i++)
		{
			for (j = 0; p[j]!='\0'; j++)
			{
				p[j] *= i;
				if (p[j] > 10)
				{
					p[j + 1] += p[j]/10;
					p[j] =p[j] % 10;				
				}
			}
		}
		for (; p[j] == 0; j--);
		for (; j >= 0; j--)cout << p[j];
	}
	
}